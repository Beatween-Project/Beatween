# 1) 정적 파일 서빙
server {
    listen       80;
    server_name  k12a205.p.ssafy.io;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name  k12a205.p.ssafy.io;

    ssl_certificate     /etc/letsencrypt/live/k12a205.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/k12a205.p.ssafy.io/privkey.pem;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    

    root   /usr/share/nginx/html;
    index  index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

     # 2-0) 특정 SSE 구독 API에 대해서만 별도 처리
    location ~ ^/api/v1/spaces/\d+/songs/sheets/subscribe$ {
        proxy_pass http://spring-boot:8080;

        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization;

        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600;
        chunked_transfer_encoding off;

        add_header Cache-Control no-cache;
        # add_header Content-Type text/event-stream;
    }


    # 2-1) /api/ 요청은 spring-boot로 프록시
    location /api/ {
        proxy_pass         http://spring-boot:8080/api/;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   Authorization     $http_authorization;
    }

    # 2-2) /swagger-ui/ 요청은 spring-boot로 프록시
    location /swagger-ui/ {
        proxy_pass         http://spring-boot:8080/swagger-ui/;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Authorization     $http_authorization;
    }

    location /v3/api-docs {
        proxy_pass http://spring-boot:8080/v3/api-docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
        proxy_set_header   Authorization     $http_authorization;
    }

    # 2-3) /ws/ 요청은 spring-boot로 프록시 
    location /ws {
        proxy_pass http://spring-boot:8080/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400;
    }

    # 2-4) /ai/ 요청은 fastapi로 프록시

    # 2-5) /omnizart/ 요청은 flask로 프록시
}
